services:
 backend:
  build:
   context: ./docker/laravel
   dockerfile: Dockerfile
  container_name: ${PROJECT_NAME}-backend
  volumes:
   - ./backend:/var/www/html
  ports:
   - '9000:9000'
  networks:
   - app-network
  depends_on:
   - mysql
  env_file:
   - .env

 frontend:
  build:
   context: .
   dockerfile: ./docker/next/Dockerfile
  container_name: ${PROJECT_NAME}-frontend
  ports:
   - '3000:3000'
  volumes:
   - ./frontend:/app:rw
   - /app/node_modules
  environment:
   - NODE_ENV=${NODE_ENV:-production}
  env_file:
   - .env
  networks:
   app-network:
    aliases:
     - dashboard.local

 nginx:
  image: nginx:latest
  container_name: ${PROJECT_NAME}-nginx
  restart: unless-stopped
  ports:
   - '80:80'
  volumes:
   - ./docker/nginx/conf.d/nginx.conf:/etc/nginx/conf.d/default.conf
   - ./frontend:/app
   - ./backend:/var/www/html
  depends_on:
   - backend
   - frontend
  networks:
   app-network:
    aliases:
     - dashboard.local
     - api-dashboard.local

 mysql:
  platform: linux/amd64
  image: mysql
  restart: unless-stopped
  tty: true
  container_name: ${PROJECT_NAME}-mysql
  environment:
   MYSQL_ROOT_PASSWORD: root
   MYSQL_DATABASE: laravel
   MYSQL_USER: laravel
   MYSQL_PASSWORD: laravel
  ports:
   - '3306:3306'
  volumes:
   - ./docker/mysql:/var/lib/mysql
  networks:
   - app-network

networks:
 app-network:
  driver: bridge

volumes:
 dbdata:
